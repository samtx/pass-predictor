name: Build wheels and upload to PyPI

# Build on every branch push, tag push, and pull request change:
# on: [push, pull_request]
# Alternatively, to publish when a (published) GitHub Release is created, use the following:
on:
  pull_request:
  release:

env:
  CIBW_BUILD_VERBOSITY: 3

jobs:
  build_wheels:
    name: Build ${{ matrix.whl }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - whl: "cp38-manylinux_x86_64"
            os: ubuntu-latest

          - whl: "cp39-manylinux_x86_64"
            os: ubuntu-latest

          - whl: "cp310-manylinux_x86_64"
            os: ubuntu-latest

          - whl: "cp38-macosx_x86_64"
            os: macos-latest

          - whl: "cp39-macosx_x86_64"
            os: macos-latest

          - whl: "cp310-macosx_x86_64"
            os: macos-latest

          - whl: "cp38-win_amd64"
            os: windows-latest

          - whl: "cp39-win_amd64"
            os: windows-latest

          - whl: "cp310-win_amd64"
            os: windows-latest

    steps:
      - uses: actions/checkout@v2

      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"

      - name: Install cibuildwheel
        run: |
          python -m pip install cibuildwheel==2.3.1

      # cibuildwheel options are listed in pyproject.toml
      - name: Build wheels
        env:
          CIBW_BUILD: ${{ matrix.whl }}
          CIBW_TEST_REQUIRES_WINDOWS: tzdata pytest numpy click
        run: |
          python -m cibuildwheel --output-dir wheelhouse

      - name: Upload wheel artifacts
        uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"

      - name: Build sdist
        run: |
          python -m pip install build
          python -m build --sdist .

      - name: Test sdist
        run: |
          python -m venv venvtest
          source venvtest/bin/activate
          python -m pip install dist/*.tar.gz
          python -m pip install pytest numpy click
          rm -r passpredict
          python -m pytest tests

      - name: Upload sdist artifact
        uses: actions/upload-artifact@v2
        with:
          path: dist/*.tar.gz

  upload_pypi:
    needs: [build_wheels, build_sdist]
    # needs: build_sdist
    runs-on: ubuntu-latest
    # upload to PyPI on github release publishing
    if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - name: Download sdist and wheel artifacts
        uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist

      - name: Upload to PyPI
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.pypi_token }}
          # To test: repository_url: https://test.pypi.org/legacy/
